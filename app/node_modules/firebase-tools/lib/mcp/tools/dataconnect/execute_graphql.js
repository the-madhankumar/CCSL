"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.execute_graphql = void 0;
const zod_1 = require("zod");
const tool_js_1 = require("../../tool.js");
const client = require("../../../dataconnect/dataplaneClient.js");
const fileUtils_js_1 = require("../../../dataconnect/fileUtils.js");
const converter_js_1 = require("./converter.js");
exports.execute_graphql = (0, tool_js_1.tool)({
    name: "execute_graphql",
    description: "Executes an arbitrary GraphQL against a Data Connect service",
    inputSchema: zod_1.z.object({
        query: zod_1.z.string().describe("A GraphQL query or mutation to execute against the service"),
        serviceId: zod_1.z
            .string()
            .nullable()
            .describe("The Firebase Data Connect service ID to look for. If there is only one service defined in firebase.json, this can be omitted and that will be used."),
        variables: zod_1.z.record(zod_1.z.string()).optional().describe("Variables for this operation."),
    }),
    annotations: {
        title: "Executes a arbitrary GraphQL query or mutation against a Data Connect service",
        readOnlyHint: false,
    },
    _meta: {
        requiresProject: true,
        requiresAuth: true,
    },
}, async ({ query, serviceId, variables }, { projectId, config }) => {
    const serviceInfo = await (0, fileUtils_js_1.pickService)(projectId, config, serviceId || undefined);
    const response = await client.executeGraphQL(client.dataconnectDataplaneClient(), serviceInfo.serviceName, { name: "", query, variables });
    return (0, converter_js_1.graphqlResponseToToolResponse)(response.body);
});
